/*
* generated by Xtext
*/
grammar InternalRQL;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package com.parallels.aps.ide.rqleditor.xtext.rql.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.parallels.aps.ide.rqleditor.xtext.rql.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import com.parallels.aps.ide.rqleditor.xtext.rql.services.RQLGrammarAccess;

}

@parser::members {
 
 	private RQLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(RQLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnd
entryRuleAnd 
:
{ before(grammarAccess.getAndRule()); }
	 ruleAnd
{ after(grammarAccess.getAndRule()); } 
	 EOF 
;

// Rule And
ruleAnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndAccess().getGroup()); }
(rule__And__Group__0)
{ after(grammarAccess.getAndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOr
entryRuleOr 
:
{ before(grammarAccess.getOrRule()); }
	 ruleOr
{ after(grammarAccess.getOrRule()); } 
	 EOF 
;

// Rule Or
ruleOr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrAccess().getGroup()); }
(rule__Or__Group__0)
{ after(grammarAccess.getOrAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHoOperand
entryRuleHoOperand 
:
{ before(grammarAccess.getHoOperandRule()); }
	 ruleHoOperand
{ after(grammarAccess.getHoOperandRule()); } 
	 EOF 
;

// Rule HoOperand
ruleHoOperand
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHoOperandAccess().getGroup()); }
(rule__HoOperand__Group__0)
{ after(grammarAccess.getHoOperandAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHigherOrderCall
entryRuleHigherOrderCall 
:
{ before(grammarAccess.getHigherOrderCallRule()); }
	 ruleHigherOrderCall
{ after(grammarAccess.getHigherOrderCallRule()); } 
	 EOF 
;

// Rule HigherOrderCall
ruleHigherOrderCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHigherOrderCallAccess().getGroup()); }
(rule__HigherOrderCall__Group__0)
{ after(grammarAccess.getHigherOrderCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBinaryOpAliases
entryRuleBinaryOpAliases 
:
{ before(grammarAccess.getBinaryOpAliasesRule()); }
	 ruleBinaryOpAliases
{ after(grammarAccess.getBinaryOpAliasesRule()); } 
	 EOF 
;

// Rule BinaryOpAliases
ruleBinaryOpAliases
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBinaryOpAliasesAccess().getAlternatives()); }
(rule__BinaryOpAliases__Alternatives)
{ after(grammarAccess.getBinaryOpAliasesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompOps
entryRuleCompOps 
:
{ before(grammarAccess.getCompOpsRule()); }
	 ruleCompOps
{ after(grammarAccess.getCompOpsRule()); } 
	 EOF 
;

// Rule CompOps
ruleCompOps
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompOpsAccess().getAlternatives()); }
(rule__CompOps__Alternatives)
{ after(grammarAccess.getCompOpsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComparison
entryRuleComparison 
:
{ before(grammarAccess.getComparisonRule()); }
	 ruleComparison
{ after(grammarAccess.getComparisonRule()); } 
	 EOF 
;

// Rule Comparison
ruleComparison
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComparisonAccess().getGroup()); }
(rule__Comparison__Group__0)
{ after(grammarAccess.getComparisonAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallOperator
entryRuleCallOperator 
:
{ before(grammarAccess.getCallOperatorRule()); }
	 ruleCallOperator
{ after(grammarAccess.getCallOperatorRule()); } 
	 EOF 
;

// Rule CallOperator
ruleCallOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallOperatorAccess().getGroup()); }
(rule__CallOperator__Group__0)
{ after(grammarAccess.getCallOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePredicate
entryRulePredicate 
:
{ before(grammarAccess.getPredicateRule()); }
	 rulePredicate
{ after(grammarAccess.getPredicateRule()); } 
	 EOF 
;

// Rule Predicate
rulePredicate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredicateAccess().getGroup()); }
(rule__Predicate__Group__0)
{ after(grammarAccess.getPredicateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePredTbl
entryRulePredTbl 
:
{ before(grammarAccess.getPredTblRule()); }
	 rulePredTbl
{ after(grammarAccess.getPredTblRule()); } 
	 EOF 
;

// Rule PredTbl
rulePredTbl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredTblAccess().getAlternatives()); }
(rule__PredTbl__Alternatives)
{ after(grammarAccess.getPredTblAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr 
:
{ before(grammarAccess.getPrimaryExprRule()); }
	 rulePrimaryExpr
{ after(grammarAccess.getPrimaryExprRule()); } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExprAccess().getGroup()); }
(rule__PrimaryExpr__Group__0)
{ after(grammarAccess.getPrimaryExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionsTbl
entryRuleFunctionsTbl 
:
{ before(grammarAccess.getFunctionsTblRule()); }
	 ruleFunctionsTbl
{ after(grammarAccess.getFunctionsTblRule()); } 
	 EOF 
;

// Rule FunctionsTbl
ruleFunctionsTbl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionsTblAccess().getAlternatives()); }
(rule__FunctionsTbl__Alternatives)
{ after(grammarAccess.getFunctionsTblAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstFuncTbl
entryRuleConstFuncTbl 
:
{ before(grammarAccess.getConstFuncTblRule()); }
	 ruleConstFuncTbl
{ after(grammarAccess.getConstFuncTblRule()); } 
	 EOF 
;

// Rule ConstFuncTbl
ruleConstFuncTbl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstFuncTblAccess().getAlternatives()); }
(rule__ConstFuncTbl__Alternatives)
{ after(grammarAccess.getConstFuncTblAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNchar
entryRuleNchar 
:
{ before(grammarAccess.getNcharRule()); }
	 ruleNchar
{ after(grammarAccess.getNcharRule()); } 
	 EOF 
;

// Rule Nchar
ruleNchar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNcharAccess().getAlternatives()); }
(rule__Nchar__Alternatives)
{ after(grammarAccess.getNcharAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePct_encoded
entryRulePct_encoded 
:
{ before(grammarAccess.getPct_encodedRule()); }
	 rulePct_encoded
{ after(grammarAccess.getPct_encodedRule()); } 
	 EOF 
;

// Rule Pct_encoded
rulePct_encoded
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPct_encodedAccess().getGroup()); }
(rule__Pct_encoded__Group__0)
{ after(grammarAccess.getPct_encodedAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStrval
entryRuleStrval 
:
{ before(grammarAccess.getStrvalRule()); }
	 ruleStrval
{ after(grammarAccess.getStrvalRule()); } 
	 EOF 
;

// Rule Strval
ruleStrval
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getStrvalAccess().getAlternatives()); }
(rule__Strval__Alternatives)
{ after(grammarAccess.getStrvalAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getStrvalAccess().getAlternatives()); }
(rule__Strval__Alternatives)*
{ after(grammarAccess.getStrvalAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getCommaKeyword_1_0_0()); }

	',' 

{ after(grammarAccess.getModelAccess().getCommaKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getAmpersandKeyword_1_0_1()); }

	'&' 

{ after(grammarAccess.getModelAccess().getAmpersandKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getSemicolonKeyword_0_0()); }

	';' 

{ after(grammarAccess.getOrAccess().getSemicolonKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getOrAccess().getVerticalLineKeyword_0_1()); }

	'|' 

{ after(grammarAccess.getOrAccess().getVerticalLineKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoOperandAccess().getHigherOrderCallParserRuleCall_1_0()); }
	ruleHigherOrderCall
{ after(grammarAccess.getHoOperandAccess().getHigherOrderCallParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getHoOperandAccess().getCallOperatorParserRuleCall_1_1()); }
	ruleCallOperator
{ after(grammarAccess.getHoOperandAccess().getCallOperatorParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getHoOperandAccess().getPredicateParserRuleCall_1_2()); }
	rulePredicate
{ after(grammarAccess.getHoOperandAccess().getPredicateParserRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getHoOperandAccess().getComparisonParserRuleCall_1_3()); }
	ruleComparison
{ after(grammarAccess.getHoOperandAccess().getComparisonParserRuleCall_1_3()); }
)

    |(
{ before(grammarAccess.getHoOperandAccess().getGroup_1_4()); }
(rule__HoOperand__Group_1_4__0)
{ after(grammarAccess.getHoOperandAccess().getGroup_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Alternatives_1_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getHoOperandAccess().getAndParserRuleCall_1_4_2_0()); }
(	ruleAnd)
{ after(grammarAccess.getHoOperandAccess().getAndParserRuleCall_1_4_2_0()); }
)
(
{ before(grammarAccess.getHoOperandAccess().getAndParserRuleCall_1_4_2_0()); }
(	ruleAnd)*
{ after(grammarAccess.getHoOperandAccess().getAndParserRuleCall_1_4_2_0()); }
)
)

    |(
(
{ before(grammarAccess.getHoOperandAccess().getOrParserRuleCall_1_4_2_1()); }
(	ruleOr)
{ after(grammarAccess.getHoOperandAccess().getOrParserRuleCall_1_4_2_1()); }
)
(
{ before(grammarAccess.getHoOperandAccess().getOrParserRuleCall_1_4_2_1()); }
(	ruleOr)*
{ after(grammarAccess.getHoOperandAccess().getOrParserRuleCall_1_4_2_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOpAliases__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBinaryOpAliasesAccess().getNeKeyword_0()); }

	'ne' 

{ after(grammarAccess.getBinaryOpAliasesAccess().getNeKeyword_0()); }
)

    |(
{ before(grammarAccess.getBinaryOpAliasesAccess().getEqKeyword_1()); }

	'eq' 

{ after(grammarAccess.getBinaryOpAliasesAccess().getEqKeyword_1()); }
)

    |(
{ before(grammarAccess.getBinaryOpAliasesAccess().getLtKeyword_2()); }

	'lt' 

{ after(grammarAccess.getBinaryOpAliasesAccess().getLtKeyword_2()); }
)

    |(
{ before(grammarAccess.getBinaryOpAliasesAccess().getLeKeyword_3()); }

	'le' 

{ after(grammarAccess.getBinaryOpAliasesAccess().getLeKeyword_3()); }
)

    |(
{ before(grammarAccess.getBinaryOpAliasesAccess().getGtKeyword_4()); }

	'gt' 

{ after(grammarAccess.getBinaryOpAliasesAccess().getGtKeyword_4()); }
)

    |(
{ before(grammarAccess.getBinaryOpAliasesAccess().getGeKeyword_5()); }

	'ge' 

{ after(grammarAccess.getBinaryOpAliasesAccess().getGeKeyword_5()); }
)

    |(
{ before(grammarAccess.getBinaryOpAliasesAccess().getLikeKeyword_6()); }

	'like' 

{ after(grammarAccess.getBinaryOpAliasesAccess().getLikeKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompOps__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompOpsAccess().getExclamationMarkEqualsSignKeyword_0()); }

	'!=' 

{ after(grammarAccess.getCompOpsAccess().getExclamationMarkEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getCompOpsAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getCompOpsAccess().getEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getCompOpsAccess().getLessThanSignKeyword_2()); }

	'<' 

{ after(grammarAccess.getCompOpsAccess().getLessThanSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getCompOpsAccess().getLessThanSignEqualsSignKeyword_3()); }

	'<=' 

{ after(grammarAccess.getCompOpsAccess().getLessThanSignEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getCompOpsAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getCompOpsAccess().getGreaterThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getCompOpsAccess().getGreaterThanSignEqualsSignKeyword_5()); }

	'>=' 

{ after(grammarAccess.getCompOpsAccess().getGreaterThanSignEqualsSignKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getGroup_2_0()); }
(rule__Comparison__Group_2_0__0)
{ after(grammarAccess.getComparisonAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getComparisonAccess().getCompOpsParserRuleCall_2_1()); }
	ruleCompOps
{ after(grammarAccess.getComparisonAccess().getCompOpsParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getBinaryOpAliasesParserRuleCall_0_0()); }
	ruleBinaryOpAliases
{ after(grammarAccess.getCallOperatorAccess().getBinaryOpAliasesParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getCallOperatorAccess().getFunctionsTblParserRuleCall_0_1()); }
	ruleFunctionsTbl
{ after(grammarAccess.getCallOperatorAccess().getFunctionsTblParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredTbl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredTblAccess().getSelectKeyword_0()); }

	'select' 

{ after(grammarAccess.getPredTblAccess().getSelectKeyword_0()); }
)

    |(
{ before(grammarAccess.getPredTblAccess().getSortKeyword_1()); }

	'sort' 

{ after(grammarAccess.getPredTblAccess().getSortKeyword_1()); }
)

    |(
{ before(grammarAccess.getPredTblAccess().getLimitKeyword_2()); }

	'limit' 

{ after(grammarAccess.getPredTblAccess().getLimitKeyword_2()); }
)

    |(
{ before(grammarAccess.getPredTblAccess().getImplementingKeyword_3()); }

	'implementing' 

{ after(grammarAccess.getPredTblAccess().getImplementingKeyword_3()); }
)

    |(
{ before(grammarAccess.getPredTblAccess().getComposingKeyword_4()); }

	'composing' 

{ after(grammarAccess.getPredTblAccess().getComposingKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getGroup_1_0()); }
(rule__PrimaryExpr__Group_1_0__0)
{ after(grammarAccess.getPrimaryExprAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExprAccess().getArrayParserRuleCall_1_1()); }
	ruleArray
{ after(grammarAccess.getPrimaryExprAccess().getArrayParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExprAccess().getStrvalParserRuleCall_1_2()); }
	ruleStrval
{ after(grammarAccess.getPrimaryExprAccess().getStrvalParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionsTbl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionsTblAccess().getIsnullKeyword_0()); }

	'isnull' 

{ after(grammarAccess.getFunctionsTblAccess().getIsnullKeyword_0()); }
)

    |(
{ before(grammarAccess.getFunctionsTblAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getFunctionsTblAccess().getInKeyword_1()); }
)

    |(
{ before(grammarAccess.getFunctionsTblAccess().getOutKeyword_2()); }

	'out' 

{ after(grammarAccess.getFunctionsTblAccess().getOutKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstFuncTbl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstFuncTblAccess().getTrueKeyword_0()); }

	'true' 

{ after(grammarAccess.getConstFuncTblAccess().getTrueKeyword_0()); }
)

    |(
{ before(grammarAccess.getConstFuncTblAccess().getFalseKeyword_1()); }

	'false' 

{ after(grammarAccess.getConstFuncTblAccess().getFalseKeyword_1()); }
)

    |(
{ before(grammarAccess.getConstFuncTblAccess().getEmptyKeyword_2()); }

	'empty' 

{ after(grammarAccess.getConstFuncTblAccess().getEmptyKeyword_2()); }
)

    |(
{ before(grammarAccess.getConstFuncTblAccess().getNullKeyword_3()); }

	'null' 

{ after(grammarAccess.getConstFuncTblAccess().getNullKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Nchar__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNcharAccess().getALPHATerminalRuleCall_0()); }
	RULE_ALPHA
{ after(grammarAccess.getNcharAccess().getALPHATerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getDIGITTerminalRuleCall_1()); }
	RULE_DIGIT
{ after(grammarAccess.getNcharAccess().getDIGITTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getHyphenMinusKeyword_2()); }

	'-' 

{ after(grammarAccess.getNcharAccess().getHyphenMinusKeyword_2()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getNcharAccess().getFullStopKeyword_3()); }
)

    |(
{ before(grammarAccess.getNcharAccess().get_Keyword_4()); }

	'_' 

{ after(grammarAccess.getNcharAccess().get_Keyword_4()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getTildeKeyword_5()); }

	'~' 

{ after(grammarAccess.getNcharAccess().getTildeKeyword_5()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getDollarSignKeyword_6()); }

	'$' 

{ after(grammarAccess.getNcharAccess().getDollarSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getColonKeyword_7()); }

	':' 

{ after(grammarAccess.getNcharAccess().getColonKeyword_7()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getAsteriskKeyword_8()); }

	'*' 

{ after(grammarAccess.getNcharAccess().getAsteriskKeyword_8()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getPlusSignKeyword_9()); }

	'+' 

{ after(grammarAccess.getNcharAccess().getPlusSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getQuestionMarkKeyword_10()); }

	'?' 

{ after(grammarAccess.getNcharAccess().getQuestionMarkKeyword_10()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getSolidusKeyword_11()); }

	'/' 

{ after(grammarAccess.getNcharAccess().getSolidusKeyword_11()); }
)

    |(
{ before(grammarAccess.getNcharAccess().getCommercialAtKeyword_12()); }

	'@' 

{ after(grammarAccess.getNcharAccess().getCommercialAtKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Strval__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrvalAccess().getNcharParserRuleCall_0()); }
	ruleNchar
{ after(grammarAccess.getStrvalAccess().getNcharParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStrvalAccess().getPct_encodedParserRuleCall_1()); }
	rulePct_encoded
{ after(grammarAccess.getStrvalAccess().getPct_encodedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getOperandsAssignment_0()); }
(rule__Model__OperandsAssignment_0)
{ after(grammarAccess.getModelAccess().getOperandsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getGroup_1()); }
(rule__Model__Group_1__0)*
{ after(grammarAccess.getModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Model__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__0__Impl
	rule__Model__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getAlternatives_1_0()); }
(rule__Model__Alternatives_1_0)
{ after(grammarAccess.getModelAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getHoOperandParserRuleCall_1_1()); }
	ruleHoOperand
{ after(grammarAccess.getModelAccess().getHoOperandParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__And__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__0__Impl
	rule__And__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getAmpersandKeyword_0()); }

	'&' 

{ after(grammarAccess.getAndAccess().getAmpersandKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__And__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__And__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__And__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndAccess().getHoOperandParserRuleCall_1()); }
	ruleHoOperand
{ after(grammarAccess.getAndAccess().getHoOperandParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Or__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__0__Impl
	rule__Or__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getAlternatives_0()); }
(rule__Or__Alternatives_0)
{ after(grammarAccess.getOrAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Or__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Or__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Or__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrAccess().getHoOperandParserRuleCall_1()); }
	ruleHoOperand
{ after(grammarAccess.getOrAccess().getHoOperandParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HoOperand__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HoOperand__Group__0__Impl
	rule__HoOperand__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoOperandAccess().getWSPTerminalRuleCall_0()); }
(	RULE_WSP)*
{ after(grammarAccess.getHoOperandAccess().getWSPTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HoOperand__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HoOperand__Group__1__Impl
	rule__HoOperand__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoOperandAccess().getAlternatives_1()); }
(rule__HoOperand__Alternatives_1)
{ after(grammarAccess.getHoOperandAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HoOperand__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HoOperand__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoOperandAccess().getWSPTerminalRuleCall_2()); }
(	RULE_WSP)*
{ after(grammarAccess.getHoOperandAccess().getWSPTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__HoOperand__Group_1_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HoOperand__Group_1_4__0__Impl
	rule__HoOperand__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Group_1_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoOperandAccess().getLeftParenthesisKeyword_1_4_0()); }

	'(' 

{ after(grammarAccess.getHoOperandAccess().getLeftParenthesisKeyword_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HoOperand__Group_1_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HoOperand__Group_1_4__1__Impl
	rule__HoOperand__Group_1_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Group_1_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoOperandAccess().getHoOperandParserRuleCall_1_4_1()); }
	ruleHoOperand
{ after(grammarAccess.getHoOperandAccess().getHoOperandParserRuleCall_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HoOperand__Group_1_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HoOperand__Group_1_4__2__Impl
	rule__HoOperand__Group_1_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Group_1_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoOperandAccess().getAlternatives_1_4_2()); }
(rule__HoOperand__Alternatives_1_4_2)
{ after(grammarAccess.getHoOperandAccess().getAlternatives_1_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HoOperand__Group_1_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HoOperand__Group_1_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HoOperand__Group_1_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHoOperandAccess().getRightParenthesisKeyword_1_4_3()); }

	')' 

{ after(grammarAccess.getHoOperandAccess().getRightParenthesisKeyword_1_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__HigherOrderCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group__0__Impl
	rule__HigherOrderCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getLOGICAL_OP_ALIASESTerminalRuleCall_0()); }
	RULE_LOGICAL_OP_ALIASES
{ after(grammarAccess.getHigherOrderCallAccess().getLOGICAL_OP_ALIASESTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HigherOrderCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group__1__Impl
	rule__HigherOrderCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getWSPTerminalRuleCall_1()); }
(	RULE_WSP)*
{ after(grammarAccess.getHigherOrderCallAccess().getWSPTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HigherOrderCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group__2__Impl
	rule__HigherOrderCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getHigherOrderCallAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HigherOrderCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group__3__Impl
	rule__HigherOrderCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getGroup_3()); }
(rule__HigherOrderCall__Group_3__0)
{ after(grammarAccess.getHigherOrderCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HigherOrderCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getHigherOrderCallAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__HigherOrderCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group_3__0__Impl
	rule__HigherOrderCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getHoOperandParserRuleCall_3_0()); }
	ruleHoOperand
{ after(grammarAccess.getHigherOrderCallAccess().getHoOperandParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HigherOrderCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getGroup_3_1()); }
(rule__HigherOrderCall__Group_3_1__0)*
{ after(grammarAccess.getHigherOrderCallAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__HigherOrderCall__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group_3_1__0__Impl
	rule__HigherOrderCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getHigherOrderCallAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__HigherOrderCall__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__HigherOrderCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__HigherOrderCall__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHigherOrderCallAccess().getHoOperandParserRuleCall_3_1_1()); }
	ruleHoOperand
{ after(grammarAccess.getHigherOrderCallAccess().getHoOperandParserRuleCall_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Comparison__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__0__Impl
	rule__Comparison__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getStrvalParserRuleCall_0()); }
	ruleStrval
{ after(grammarAccess.getComparisonAccess().getStrvalParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__1__Impl
	rule__Comparison__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getWSPTerminalRuleCall_1()); }
(	RULE_WSP)*
{ after(grammarAccess.getComparisonAccess().getWSPTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__2__Impl
	rule__Comparison__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getAlternatives_2()); }
(rule__Comparison__Alternatives_2)
{ after(grammarAccess.getComparisonAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getPrimaryExprParserRuleCall_3()); }
	rulePrimaryExpr
{ after(grammarAccess.getComparisonAccess().getPrimaryExprParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Comparison__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_2_0__0__Impl
	rule__Comparison__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getEqualsSignKeyword_2_0_0()); }

	'=' 

{ after(grammarAccess.getComparisonAccess().getEqualsSignKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_2_0__1__Impl
	rule__Comparison__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getBinaryOpAliasesParserRuleCall_2_0_1()); }
	ruleBinaryOpAliases
{ after(grammarAccess.getComparisonAccess().getBinaryOpAliasesParserRuleCall_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Comparison__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Comparison__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparison__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComparisonAccess().getEqualsSignKeyword_2_0_2()); }

	'=' 

{ after(grammarAccess.getComparisonAccess().getEqualsSignKeyword_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CallOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group__0__Impl
	rule__CallOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getAlternatives_0()); }
(rule__CallOperator__Alternatives_0)
{ after(grammarAccess.getCallOperatorAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group__1__Impl
	rule__CallOperator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getWSPTerminalRuleCall_1()); }
(	RULE_WSP)*
{ after(grammarAccess.getCallOperatorAccess().getWSPTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallOperator__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group__2__Impl
	rule__CallOperator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getCallOperatorAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallOperator__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group__3__Impl
	rule__CallOperator__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getGroup_3()); }
(rule__CallOperator__Group_3__0)?
{ after(grammarAccess.getCallOperatorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallOperator__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getCallOperatorAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CallOperator__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group_3__0__Impl
	rule__CallOperator__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getPrimaryExprParserRuleCall_3_0()); }
	rulePrimaryExpr
{ after(grammarAccess.getCallOperatorAccess().getPrimaryExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallOperator__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getGroup_3_1()); }
(rule__CallOperator__Group_3_1__0)*
{ after(grammarAccess.getCallOperatorAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallOperator__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group_3_1__0__Impl
	rule__CallOperator__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getCallOperatorAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallOperator__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallOperator__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallOperator__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallOperatorAccess().getPrimaryExprParserRuleCall_3_1_1()); }
	rulePrimaryExpr
{ after(grammarAccess.getCallOperatorAccess().getPrimaryExprParserRuleCall_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Predicate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group__0__Impl
	rule__Predicate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getPredTblParserRuleCall_0()); }
	rulePredTbl
{ after(grammarAccess.getPredicateAccess().getPredTblParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group__1__Impl
	rule__Predicate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getWSPTerminalRuleCall_1()); }
(	RULE_WSP)*
{ after(grammarAccess.getPredicateAccess().getWSPTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group__2__Impl
	rule__Predicate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getPredicateAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group__3__Impl
	rule__Predicate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getGroup_3()); }
(rule__Predicate__Group_3__0)?
{ after(grammarAccess.getPredicateAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getPredicateAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Predicate__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group_3__0__Impl
	rule__Predicate__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getPrimaryExprParserRuleCall_3_0()); }
	rulePrimaryExpr
{ after(grammarAccess.getPredicateAccess().getPrimaryExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getGroup_3_1()); }
(rule__Predicate__Group_3_1__0)*
{ after(grammarAccess.getPredicateAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Predicate__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group_3_1__0__Impl
	rule__Predicate__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getPredicateAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Predicate__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Predicate__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Predicate__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredicateAccess().getPrimaryExprParserRuleCall_3_1_1()); }
	rulePrimaryExpr
{ after(grammarAccess.getPredicateAccess().getPrimaryExprParserRuleCall_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpr__Group__0__Impl
	rule__PrimaryExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getWSPTerminalRuleCall_0()); }
(	RULE_WSP)*
{ after(grammarAccess.getPrimaryExprAccess().getWSPTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpr__Group__1__Impl
	rule__PrimaryExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getAlternatives_1()); }
(rule__PrimaryExpr__Alternatives_1)
{ after(grammarAccess.getPrimaryExprAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpr__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getWSPTerminalRuleCall_2()); }
(	RULE_WSP)*
{ after(grammarAccess.getPrimaryExprAccess().getWSPTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpr__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpr__Group_1_0__0__Impl
	rule__PrimaryExpr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getConstFuncTblParserRuleCall_1_0_0()); }
	ruleConstFuncTbl
{ after(grammarAccess.getPrimaryExprAccess().getConstFuncTblParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpr__Group_1_0__1__Impl
	rule__PrimaryExpr__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getWSPTerminalRuleCall_1_0_1()); }
(	RULE_WSP)*
{ after(grammarAccess.getPrimaryExprAccess().getWSPTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpr__Group_1_0__2__Impl
	rule__PrimaryExpr__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_1_0_2()); }

	'(' 

{ after(grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpr__Group_1_0__3__Impl
	rule__PrimaryExpr__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getWSPTerminalRuleCall_1_0_3()); }
(	RULE_WSP)*
{ after(grammarAccess.getPrimaryExprAccess().getWSPTerminalRuleCall_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpr__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpr__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpr__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_1_0_4()); }

	')' 

{ after(grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getArrayAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getWSPTerminalRuleCall_1()); }
(	RULE_WSP)*
{ after(grammarAccess.getArrayAccess().getWSPTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getStrvalParserRuleCall_2()); }
	ruleStrval
{ after(grammarAccess.getArrayAccess().getStrvalParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__3__Impl
	rule__Array__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getWSPTerminalRuleCall_3()); }
(	RULE_WSP)*
{ after(grammarAccess.getArrayAccess().getWSPTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__4__Impl
	rule__Array__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getGroup_4()); }
(rule__Array__Group_4__0)*
{ after(grammarAccess.getArrayAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getArrayAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Array__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__0__Impl
	rule__Array__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getArrayAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__1__Impl
	rule__Array__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getWSPTerminalRuleCall_4_1()); }
(	RULE_WSP)*
{ after(grammarAccess.getArrayAccess().getWSPTerminalRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__2__Impl
	rule__Array__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getStrvalParserRuleCall_4_2()); }
	ruleStrval
{ after(grammarAccess.getArrayAccess().getStrvalParserRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getWSPTerminalRuleCall_4_3()); }
(	RULE_WSP)*
{ after(grammarAccess.getArrayAccess().getWSPTerminalRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Pct_encoded__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pct_encoded__Group__0__Impl
	rule__Pct_encoded__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pct_encoded__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPct_encodedAccess().getPercentSignKeyword_0()); }

	'%' 

{ after(grammarAccess.getPct_encodedAccess().getPercentSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pct_encoded__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pct_encoded__Group__1__Impl
	rule__Pct_encoded__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Pct_encoded__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPct_encodedAccess().getXDIGITTerminalRuleCall_1()); }
	RULE_XDIGIT
{ after(grammarAccess.getPct_encodedAccess().getXDIGITTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pct_encoded__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pct_encoded__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pct_encoded__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPct_encodedAccess().getXDIGITTerminalRuleCall_2()); }
	RULE_XDIGIT
{ after(grammarAccess.getPct_encodedAccess().getXDIGITTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__OperandsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getOperandsHoOperandParserRuleCall_0_0()); }
	ruleHoOperand{ after(grammarAccess.getModelAccess().getOperandsHoOperandParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_DIGIT : '0'..'9';

RULE_XDIGIT : (RULE_DIGIT|'A'..'F');

RULE_ALPHA : ('A'..'Z'|'a'..'z');

RULE_WSP : (' '|'\t');

RULE_LOGICAL_OP_ALIASES : ('or'|'and'|'not');


